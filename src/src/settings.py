# """
# Django settings for src project.

# Generated by 'django-admin startproject' using Django 5.1.4.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.1/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.1/ref/settings/
# """

# from pathlib import Path
# import os
# import dj_database_url
# from dotenv import load_dotenv

# load_dotenv()

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-l)4jewid*)4fou9*w^$d-94&f)7pf+2^n7xrtly2t_(q78=9#j'

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
# ALLOWED_HOSTS = ['*']

# # Application definition
# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     # my apps
#     # 'main',
#     'introToHTML_app',
#     'introToCSS_app',
#     'blog_ttrial',
#     'ProgrammingLanguages_app',
#     'accounts',
#     'quizApp',
#     'exerciseApp',
#     'subscribtion',
#     # third party apps
#     'storages',
# ]

# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'whitenoise.middleware.WhiteNoiseMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
#     # 'subscribtion.middleware.SubscriptionMiddleware',
# ]

# ROOT_URLCONF = 'src.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [os.path.join(BASE_DIR,'templates')],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#                 # my context processors
#                 'accounts.context_processors.base_url_processor',
#                 'accounts.context_processors.leader_boards_context_view',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'src.wsgi.application'

# # Database
# # https://docs.djangoproject.com/en/5.1/ref/settings/#databases
# DATABASE_URL = os.getenv('DATABASE_URL')
# DATABASES = {
#     'default': dj_database_url.config(default=DATABASE_URL, conn_max_age=600)
# }

# # Cloudflare R2 Storage for Static and Media Files
# AWS_S3_ENDPOINT_URL = os.environ.get('AWS_S3_ENDPOINT_URL')
# AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
# AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
# AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')
# AWS_CUSTOM_DOMAIN=os.environ.get('AWS_CUSTOM_DOMAIN')
# AWS_S3_SIGNATURE_VERSION = 's3v4'
# AWS_S3_REGION_NAME = 'auto'
# AWS_DEFAULT_ACL = os.environ.get('AWS_DEFAULT_ACL') # Make sure files are publicly accessible
# AWS_QUERYSTRING_AUTH = False
# AWS_S3_PARAMETERS = {
#     'CacheControl': 'max-age=86400',
# }

# # Static and Media Files
# # https://docs.djangoproject.com/en/5.1/howto/static-files/
# # STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# STATICFILES_STORAGE =f"https://{AWS_CUSTOM_DOMAIN}/static/"
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, 'static'),
# )
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# STATIC_URL = '/static/'
# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# # STATIC_URL =f"https://{AWS_CUSTOM_DOMAIN}/static/" if not DEBUG else '/static/'

# if not DEBUG:
#     STATICFILES_STORAGE='whitenoise.storage.CompressedManifestStaticFileStorage'

# R2_BASE_URL = 'https://static.bytecub.tech'




# # Directory to save files (configurable)
# FILE_SAVE_DIRECTORY = os.path.join(BASE_DIR, 'saved_files')

# # Password validation
# # https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#         },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]

# # Internationalization
# # https://docs.djangoproject.com/en/5.1/topics/i18n/
# LANGUAGE_CODE = 'en-us'
# TIME_ZONE = 'UTC'
# USE_I18N = True
# USE_TZ = True




# # Default primary key field type
# # https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# if DEBUG:
#     BASE_URL = 'http://127.0.0.1:8000/'
# else:
#     BASE_URL = 'https://bytecub.onrender.com'








"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
import dj_database_url


# Load environment variables from .env
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-l)4jewid*)4fou9*w^$d-94&f)7pf+2^n7xrtly2t_(q78=9#j'
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # my apps
    # 'main',
    'introToHTML_app',
    'introToCSS_app',
    'blog_ttrial',
    'ProgrammingLanguages_app',
    'accounts',
    'quizApp',
    'exerciseApp',
    'subscribtion',
    # third party apps
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # 'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'subscribtion.middleware.SubscriptionMiddleware',
]

ROOT_URLCONF = 'src.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # my context processors
                'accounts.context_processors.base_url_processor',
                'accounts.context_processors.leader_boards_context_view',
            ],
        },
    },
]

WSGI_APPLICATION = 'src.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
# DATABASE_URL = os.getenv('DATABASE_URL')
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# DATABASES = {
#     "default": dj_database_url.parse(
#         os.getenv("DATABASE_URL"),
#         conn_max_age=600,
#         ssl_require=True,
#     )
# }

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        "default": dj_database_url.parse(
            os.getenv("DATABASE_URL"),
            conn_max_age=600,
            ssl_require=True,
        )
    }


# Cloudflare R2 Storage for Static and Media Files
# AWS_S3_ENDPOINT_URL = os.environ.get('AWS_S3_ENDPOINT_URL')
# AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
# AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
# AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')
# AWS_CUSTOM_DOMAIN=os.environ.get('AWS_CUSTOM_DOMAIN')
# AWS_S3_SIGNATURE_VERSION = 's3v4'
# AWS_S3_REGION_NAME = 'auto'
# AWS_DEFAULT_ACL = os.environ.get('AWS_DEFAULT_ACL') # Make sure files are publicly accessible
# AWS_QUERYSTRING_AUTH = False
# AWS_S3_PARAMETERS = {
#     'CacheControl': 'max-age=86400',
# }

# Static and Media Files
# https://docs.djangoproject.com/en/5.1/howto/static-files/
# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# STATICFILES_STORAGE =f"https://{AWS_CUSTOM_DOMAIN}/static/"
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, 'static'),
# )
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# STATIC_URL = '/static/'
# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# # STATIC_URL =f"https://{AWS_CUSTOM_DOMAIN}/static/" if not DEBUG else '/static/'

# if not DEBUG:
#     STATICFILES_STORAGE='whitenoise.storage.CompressedManifestStaticFileStorage'

# R2_BASE_URL = 'https://static.bytecub.tech'




# # Directory to save files (configurable)
# FILE_SAVE_DIRECTORY = os.path.join(BASE_DIR, 'saved_files')

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True




# # Default primary key field type
# # https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# if DEBUG:
#     BASE_URL = 'http://127.0.0.1:8000/'
# else:
#     BASE_URL = 'https://bytecub.onrender.com'

AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = os.getenv("AWS_STORAGE_BUCKET_NAME")
AWS_S3_ENDPOINT_URL = os.getenv("AWS_S3_ENDPOINT_URL")
AWS_S3_CUSTOM_DOMAIN = os.getenv("AWS_S3_CUSTOM_DOMAIN")


# STATIC_URL='/static/'
# MEDIA_ROOT='/media/'
# MEDIA_ROOT=os.path.join(BASE_DIR,'media')
# STATICFILES_DIRS=(
#     os.path.join(BASE_DIR,'static'),
# )

# Static (CSS, JS)
STATIC_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/static/"
# Media (uploads, videos)
MEDIA_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/media/"


STORAGES = {
    "default": {  # For media uploads
        "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
        "OPTIONS": {
        "access_key": AWS_ACCESS_KEY_ID,
            "secret_key": AWS_SECRET_ACCESS_KEY,
            "bucket_name": AWS_STORAGE_BUCKET_NAME,
            "endpoint_url": AWS_S3_ENDPOINT_URL,
        },
    },
    "staticfiles": {  # For collectstatic
        "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
        "OPTIONS": {
            "access_key": AWS_ACCESS_KEY_ID,
            "secret_key": AWS_SECRET_ACCESS_KEY,
            "bucket_name": AWS_STORAGE_BUCKET_NAME,
            "endpoint_url": AWS_S3_ENDPOINT_URL,
            "custom_domain": f"{AWS_S3_CUSTOM_DOMAIN}/static",
        },
    },
}

# Where collectstatic collects before upload (temporary)
STATIC_ROOT = BASE_DIR / "staticfiles"
MEDIA_ROOT = BASE_DIR / "mediafiles"



# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

if DEBUG:
    BASE_URL = 'http://127.0.0.1:8000/'
else:
    BASE_URL = 'https://www.bytecub.onrender.com'

# ---------------------------------------------------
# LOGGING (optional, helps debugging in Render)
# ---------------------------------------------------
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {"class": "logging.StreamHandler"},
    },
    "root": {
        "handlers": ["console"],
        "level": "INFO",
    },
}










